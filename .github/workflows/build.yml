name: Build
run-name: "🛠️ CI: ${{ github.event.head_commit.message }} (${{ github.sha }})"
on:
  pull_request:
  push:

jobs:
  be-build:
    name: 🛠️ Build Backend Artifact
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots verify

      - run: mkdir staging && cp target/*.jar staging
      - uses: actions/upload-artifact@v3
        with:
          name: Package
          path: staging

#  be-lint:
#    name: 🕵️ Lint Backend Code
#    needs: [be-build]
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#
#      - name: Super-Linter
#        uses: super-linter/super-linter@v5.0.0
#        env:
#          VALIDATE_JAVA: true

#  be-security-audit:
#    name: 🛡️ Audit Backend Packages for Security Vulnerabilities
#    needs: [be-build]
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#
#      - name: Check for security issue
#        run: cd backend && npm audit --production --audit-level=medium

  be-static-analysis:
    name: 🔬 Run Static Analysis on Backend Code
#    needs: [be-build, be-lint, be-test, be-security-audit]
    needs: [be-build]
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: java
          queries: +security-and-quality

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

#  fe-build:
#    name: 🛠️ Build Frontend Artifact
#    runs-on: ubuntu-latest
#    steps:
#      - name: Cache Node Modules
#        id: cache
#        uses: actions/cache@v3
#        with:
#          path: node_modules
#          key: fe-node-${{ hashFiles('frontend/package-lock.json') }}
#
#      - name: Checkout
#        uses: actions/checkout@v3
#
#      - name: Setup Node
#        uses: actions/setup-node@v3
#        with:
#          node-version: 16.x
#
#      - name: Install Deps
#        run: cd frontend && npm i
#
#      - name: Build
#        run: |
#          cd frontend && npm run build
#
#      - name: Store Artifact
#        uses: actions/upload-artifact@v3
#        with:
#          name: frontend-artifact-${{ github.sha }}
#          path: frontend/build
#
#  fe-security-audit:
#    name: 🛡️ Audit Frontend Packages for Security Vulnerabilities
#    needs: [fe-build]
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#
#      - name: Check for security issue
#        run: cd frontend && npm audit --production --audit-level=critical
#
#  fe-static-analysis:
#    name: 🔬 Run Static Analysis on Frontend Code
#    needs: [fe-security-audit]
#    runs-on: ubuntu-latest
#    permissions:
#      security-events: write
#    steps:
#      - uses: actions/checkout@v3
#
#      - name: Initialize CodeQL
#        uses: github/codeql-action/init@v2
#        with:
#          config-file: ./.github/codeql/codeql.config.yml
#
#      - name: Setup Node
#        uses: actions/setup-node@v3
#        with:
#          node-version: 16.x
#
#      - name: Cache Node Modules
#        id: cache
#        uses: actions/cache@v3
#        with:
#          path: node_modules
#          key: node-${{ hashFiles('**/package-lock.json') }}
#
#      - name: Install Deps
#        run: cd frontend && npm i
#
#      - name: Build
#        run: cd frontend && npm run build
#
#      # - name: Perform Analysis
#      #   uses: github/codeql-action/analyze@v2
#
#  trigger-deploy:
#    name: 🚚 Start Deployment
#    if: github.ref == 'refs/heads/main'
#    needs: [be-static-analysis, fe-static-analysis]
#    runs-on: ubuntu-latest
#    permissions: write-all
#    steps:
#      - name: Dispatch
#        uses: benc-uk/workflow-dispatch@v1
#        with:
#          workflow: Deploy
#          inputs: '{ "ref": "${{ github.sha }}" }'
